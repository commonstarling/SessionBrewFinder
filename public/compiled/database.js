'use strict';

var MongoClient = require('mongodb').MongoClient,
    assert = require('assert');

// Connection URL
var url = 'mongodb://localhost:27017/myproject';
// Use connect method to connect to the Server
MongoClient.connect(url, function (err, db) {
  assert.equal(null, err);
  console.log("Connected correctly to server");

  insertDocuments(db, function () {
    db.close();
  });
});

var insertDocuments = function insertDocuments(db, callback) {
  // Get the documents collection
  var collection = db.collection('documents');
  // Insert some documents
  collection.insertMany([{ a: 1 }, { a: 2 }, { a: 3 }], function (err, result) {
    assert.equal(err, null);
    assert.equal(3, result.result.n);
    assert.equal(3, result.ops.length);
    console.log("Inserted 3 documents into the document collection");
    callback(result);
  });
};

var findDocuments = function findDocuments(db, callback) {
  // Get the documents collection
  var collection = db.collection('documents');
  // Find some documents
  collection.find({}).toArray(function (err, docs) {
    assert.equal(err, null);
    assert.equal(2, docs.length);
    console.log("Found the following records");
    console.dir(docs);
    callback(docs);
  });
};

var deleteDocument = function deleteDocument(db, callback) {
  // Get the documents collection
  var collection = db.collection('documents');
  // Insert some documents
  collection.deleteOne({ a: 3 }, function (err, result) {
    assert.equal(err, null);
    assert.equal(1, result.result.n);
    console.log("Removed the document with the field a equal to 3");
    callback(result);
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2RhdGFiYXNlLmpzIl0sIm5hbWVzIjpbIk1vbmdvQ2xpZW50IiwicmVxdWlyZSIsImFzc2VydCIsInVybCIsImNvbm5lY3QiLCJlcnIiLCJkYiIsImVxdWFsIiwiY29uc29sZSIsImxvZyIsImluc2VydERvY3VtZW50cyIsImNsb3NlIiwiY2FsbGJhY2siLCJjb2xsZWN0aW9uIiwiaW5zZXJ0TWFueSIsImEiLCJyZXN1bHQiLCJuIiwib3BzIiwibGVuZ3RoIiwiZmluZERvY3VtZW50cyIsImZpbmQiLCJ0b0FycmF5IiwiZG9jcyIsImRpciIsImRlbGV0ZURvY3VtZW50IiwiZGVsZXRlT25lIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLGNBQWNDLFFBQVEsU0FBUixFQUFtQkQsV0FBckM7QUFBQSxJQUFrREUsU0FBU0QsUUFBUSxRQUFSLENBQTNEOztBQUVBO0FBQ0EsSUFBSUUsTUFBTSxxQ0FBVjtBQUNBO0FBQ0FILFlBQVlJLE9BQVosQ0FBb0JELEdBQXBCLEVBQXlCLFVBQVNFLEdBQVQsRUFBY0MsRUFBZCxFQUFrQjtBQUN6Q0osU0FBT0ssS0FBUCxDQUFhLElBQWIsRUFBbUJGLEdBQW5CO0FBQ0FHLFVBQVFDLEdBQVIsQ0FBWSwrQkFBWjs7QUFFQUMsa0JBQWdCSixFQUFoQixFQUFvQixZQUFXO0FBQzdCQSxPQUFHSyxLQUFIO0FBQ0QsR0FGRDtBQUdELENBUEQ7O0FBU0EsSUFBSUQsa0JBQWtCLFNBQWxCQSxlQUFrQixDQUFTSixFQUFULEVBQWFNLFFBQWIsRUFBdUI7QUFDM0M7QUFDQSxNQUFJQyxhQUFhUCxHQUFHTyxVQUFILENBQWMsV0FBZCxDQUFqQjtBQUNBO0FBQ0FBLGFBQVdDLFVBQVgsQ0FBc0IsQ0FDcEIsRUFBQ0MsR0FBSSxDQUFMLEVBRG9CLEVBQ1gsRUFBQ0EsR0FBSSxDQUFMLEVBRFcsRUFDRixFQUFDQSxHQUFJLENBQUwsRUFERSxDQUF0QixFQUVHLFVBQVNWLEdBQVQsRUFBY1csTUFBZCxFQUFzQjtBQUN2QmQsV0FBT0ssS0FBUCxDQUFhRixHQUFiLEVBQWtCLElBQWxCO0FBQ0FILFdBQU9LLEtBQVAsQ0FBYSxDQUFiLEVBQWdCUyxPQUFPQSxNQUFQLENBQWNDLENBQTlCO0FBQ0FmLFdBQU9LLEtBQVAsQ0FBYSxDQUFiLEVBQWdCUyxPQUFPRSxHQUFQLENBQVdDLE1BQTNCO0FBQ0FYLFlBQVFDLEdBQVIsQ0FBWSxtREFBWjtBQUNBRyxhQUFTSSxNQUFUO0FBQ0QsR0FSRDtBQVNELENBYkQ7O0FBZUEsSUFBSUksZ0JBQWdCLFNBQWhCQSxhQUFnQixDQUFTZCxFQUFULEVBQWFNLFFBQWIsRUFBdUI7QUFDekM7QUFDQSxNQUFJQyxhQUFhUCxHQUFHTyxVQUFILENBQWMsV0FBZCxDQUFqQjtBQUNBO0FBQ0FBLGFBQVdRLElBQVgsQ0FBZ0IsRUFBaEIsRUFBb0JDLE9BQXBCLENBQTRCLFVBQVNqQixHQUFULEVBQWNrQixJQUFkLEVBQW9CO0FBQzlDckIsV0FBT0ssS0FBUCxDQUFhRixHQUFiLEVBQWtCLElBQWxCO0FBQ0FILFdBQU9LLEtBQVAsQ0FBYSxDQUFiLEVBQWdCZ0IsS0FBS0osTUFBckI7QUFDQVgsWUFBUUMsR0FBUixDQUFZLDZCQUFaO0FBQ0FELFlBQVFnQixHQUFSLENBQVlELElBQVo7QUFDQVgsYUFBU1csSUFBVDtBQUNELEdBTkQ7QUFPRCxDQVhEOztBQWFBLElBQUlFLGlCQUFpQixTQUFqQkEsY0FBaUIsQ0FBU25CLEVBQVQsRUFBYU0sUUFBYixFQUF1QjtBQUMxQztBQUNBLE1BQUlDLGFBQWFQLEdBQUdPLFVBQUgsQ0FBYyxXQUFkLENBQWpCO0FBQ0E7QUFDQUEsYUFBV2EsU0FBWCxDQUFxQixFQUFFWCxHQUFJLENBQU4sRUFBckIsRUFBZ0MsVUFBU1YsR0FBVCxFQUFjVyxNQUFkLEVBQXNCO0FBQ3BEZCxXQUFPSyxLQUFQLENBQWFGLEdBQWIsRUFBa0IsSUFBbEI7QUFDQUgsV0FBT0ssS0FBUCxDQUFhLENBQWIsRUFBZ0JTLE9BQU9BLE1BQVAsQ0FBY0MsQ0FBOUI7QUFDQVQsWUFBUUMsR0FBUixDQUFZLGtEQUFaO0FBQ0FHLGFBQVNJLE1BQVQ7QUFDRCxHQUxEO0FBTUQsQ0FWRCIsImZpbGUiOiJkYXRhYmFzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBNb25nb0NsaWVudCA9IHJlcXVpcmUoJ21vbmdvZGInKS5Nb25nb0NsaWVudCwgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7XG5cbi8vIENvbm5lY3Rpb24gVVJMXG52YXIgdXJsID0gJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvbXlwcm9qZWN0Jztcbi8vIFVzZSBjb25uZWN0IG1ldGhvZCB0byBjb25uZWN0IHRvIHRoZSBTZXJ2ZXJcbk1vbmdvQ2xpZW50LmNvbm5lY3QodXJsLCBmdW5jdGlvbihlcnIsIGRiKSB7XG4gIGFzc2VydC5lcXVhbChudWxsLCBlcnIpO1xuICBjb25zb2xlLmxvZyhcIkNvbm5lY3RlZCBjb3JyZWN0bHkgdG8gc2VydmVyXCIpO1xuXG4gIGluc2VydERvY3VtZW50cyhkYiwgZnVuY3Rpb24oKSB7XG4gICAgZGIuY2xvc2UoKTtcbiAgfSk7XG59KTtcblxudmFyIGluc2VydERvY3VtZW50cyA9IGZ1bmN0aW9uKGRiLCBjYWxsYmFjaykge1xuICAvLyBHZXQgdGhlIGRvY3VtZW50cyBjb2xsZWN0aW9uXG4gIHZhciBjb2xsZWN0aW9uID0gZGIuY29sbGVjdGlvbignZG9jdW1lbnRzJyk7XG4gIC8vIEluc2VydCBzb21lIGRvY3VtZW50c1xuICBjb2xsZWN0aW9uLmluc2VydE1hbnkoW1xuICAgIHthIDogMX0sIHthIDogMn0sIHthIDogM31cbiAgXSwgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICBhc3NlcnQuZXF1YWwoZXJyLCBudWxsKTtcbiAgICBhc3NlcnQuZXF1YWwoMywgcmVzdWx0LnJlc3VsdC5uKTtcbiAgICBhc3NlcnQuZXF1YWwoMywgcmVzdWx0Lm9wcy5sZW5ndGgpO1xuICAgIGNvbnNvbGUubG9nKFwiSW5zZXJ0ZWQgMyBkb2N1bWVudHMgaW50byB0aGUgZG9jdW1lbnQgY29sbGVjdGlvblwiKTtcbiAgICBjYWxsYmFjayhyZXN1bHQpO1xuICB9KTtcbn1cblxudmFyIGZpbmREb2N1bWVudHMgPSBmdW5jdGlvbihkYiwgY2FsbGJhY2spIHtcbiAgLy8gR2V0IHRoZSBkb2N1bWVudHMgY29sbGVjdGlvblxuICB2YXIgY29sbGVjdGlvbiA9IGRiLmNvbGxlY3Rpb24oJ2RvY3VtZW50cycpO1xuICAvLyBGaW5kIHNvbWUgZG9jdW1lbnRzXG4gIGNvbGxlY3Rpb24uZmluZCh7fSkudG9BcnJheShmdW5jdGlvbihlcnIsIGRvY3MpIHtcbiAgICBhc3NlcnQuZXF1YWwoZXJyLCBudWxsKTtcbiAgICBhc3NlcnQuZXF1YWwoMiwgZG9jcy5sZW5ndGgpO1xuICAgIGNvbnNvbGUubG9nKFwiRm91bmQgdGhlIGZvbGxvd2luZyByZWNvcmRzXCIpO1xuICAgIGNvbnNvbGUuZGlyKGRvY3MpO1xuICAgIGNhbGxiYWNrKGRvY3MpO1xuICB9KTtcbn1cblxudmFyIGRlbGV0ZURvY3VtZW50ID0gZnVuY3Rpb24oZGIsIGNhbGxiYWNrKSB7XG4gIC8vIEdldCB0aGUgZG9jdW1lbnRzIGNvbGxlY3Rpb25cbiAgdmFyIGNvbGxlY3Rpb24gPSBkYi5jb2xsZWN0aW9uKCdkb2N1bWVudHMnKTtcbiAgLy8gSW5zZXJ0IHNvbWUgZG9jdW1lbnRzXG4gIGNvbGxlY3Rpb24uZGVsZXRlT25lKHsgYSA6IDMgfSwgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICBhc3NlcnQuZXF1YWwoZXJyLCBudWxsKTtcbiAgICBhc3NlcnQuZXF1YWwoMSwgcmVzdWx0LnJlc3VsdC5uKTtcbiAgICBjb25zb2xlLmxvZyhcIlJlbW92ZWQgdGhlIGRvY3VtZW50IHdpdGggdGhlIGZpZWxkIGEgZXF1YWwgdG8gM1wiKTtcbiAgICBjYWxsYmFjayhyZXN1bHQpO1xuICB9KTtcbn0iXX0=